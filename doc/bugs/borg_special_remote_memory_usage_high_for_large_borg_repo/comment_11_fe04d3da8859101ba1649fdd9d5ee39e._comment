[[!comment format=mdwn
 username="joey"
 subject="""comment 11"""
 date="2021-10-06T18:03:23Z"
 content="""
@tomdhunt the tree is being stored in git, so the natural way
to do something like a difference encoding would be a series of trees
in a commit sequence.

The tree import interface does support that, but borg remote 
doesn't bother and puts all the items in a single tree. But even if it did,
it would still populate the same ImportableContents data structure with
the same amount of data just a different layout.

But maybe this line of thinking does point toward a solution.. Suppose that
there was a way for listImportableContents to generate an
ImportableContentsChunk that contained a subtree, and a continuation to get
the next subtree. Then each subtree's worth of ImportableContents would be
passed through to recordImportTree (a version omitting the parts of it that
commit the tree), and only one subtree at a time would occupy memory. At
the end a tree would be constucted containing all the subtrees, and
committed. 

For borg, each archive would be a subtree; 500k filenames will fit in memory
or at least fit better than `365*500k`.

This is a promising idea! Started working on it in a `borgchunks` branch.
"""]]
