[[!comment format=mdwn
 username="joey"
 subject="""comment 1"""
 date="2022-01-11T16:25:50Z"
 content="""
`git update-index` creates an index file. A repo with an index file is no
longer a bare repo to a certain extent, at least it is very unusual for a
repo to be both bare and contain an index file, since after all an index
file is a record of the files in the working tree. This seems to be the root
of the confusion.

I was able to reproduce this by simply copying `.git/index` from a non-bare
repo into the bare repo and then running `git-annex drop --all`.

Removing the index file was not sufficient to fix it. It turned out I also 
needed to delete `annex/keydb*`. Then things returned to normal.

So, it seems that the keys database is getting populated in a bare repo
when there's an index file, and once the keys database is populated, it
runs code paths that will not work in a bare repo, because that database
contains paths (taken from the index) that it treats as being present in a
nonexistant working tree. I've fixed it to both avoid populating the keys
database, and ignore a populated keys database in this situation.

But.. My suggestion is, if you need to do this kind of thing in a bare repo,
set `GIT_INDEX_FILE` to some other file. That's how git-annex makes similar
tree objects.
"""]]
