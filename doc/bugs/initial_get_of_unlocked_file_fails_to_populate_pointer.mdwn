Clone a repository containing an unlocked file, and `git annex get` it. The
object is transferred, but the pointer file does not get populated.
(`git annex fsck` will then notice and correct the problem.)

If any other git-annex command is run before the get, it avoids the
problem. So the problem has to do with autoinit followed by reading
associated files from the keys db.

Bisected to [[!commit 428c91606b434512d1986622e751c795edf4df44]] --[[Joey]] 

It seems that reconcileStaged is populating the
associated files, but later when they're queried, the query returns an
empty list. So something to do with database write caching.

Somehow, not having init call `scanAnnexedFiles` makes this bug go away.

> fixed --[[Joey]]

----

I have reopened this bug, it seems the previous fix was not right.
See [[!commit b3c4579c7907147a496bdf2c73b42238d8b239d6]] for that
fix, which had doubts at the time in the commit message. --[[Joey]] 

Here is a test case:

	git init foo
	cd foo
	git annex init
	echo 1 > foo
	echo 2 > bar
	echo 3 > baz
	git annex add
	git annex unlock
	git commit -m add
	cd ..
	git clone foo bar
	cd bar
	git-annex get
	cat *

This outputs 1 for foo, followed by annex pointer files for files bar and baz.

The previous fix attempt did make foo get populated, before that none
of the files were populated.
